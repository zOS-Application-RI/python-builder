name: Python Base to Docker Hub For AWX Builds

on:
  push:
    # branches:
    branches:  
      - 'main'
    tags:
      - 'v*'
  # pull_request:
  #   branches:
  #     - 'main'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.2.1
        with:
          install: true
      -  
        name: Generate build ID
        id: prep
        run: |
          branch=${GITHUB_REF##*/}
          # sha=${GITHUB_SHA::8}
          # ts=$(date +%s)
          ts=$(date +%Y-%m-%d--%H-%M)
          echo "::set-output name=BUILD_ID::${branch}-${ts}"          

      -     
        name: Cache Docker layers
        uses: actions/cache@v3.2.1
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}
          tags: |
            type=ref,event=tag
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      -
        name: Login to DockerHub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      -
        name: Build and push
        uses: docker/build-push-action@v3.2.0
        with:
          context: ./
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/arm64, linux/s390x
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:latest, 
                ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:v1,
                ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:${{ steps.prep.outputs.BUILD_ID }}
                ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:buildcache,mode=max
          
      # -   
      #   name : Docker Scan Image
      #   id: scan
      #   uses: anchore/scan-action@v3.2.5
      #   with:
      #     image: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}
      #     fail-build: false
      #     acs-report-enable: true

      # - name: Run Snyk to check Docker image for vulnerabilities
      #   continue-on-error: true
      #   uses: snyk/actions/docker@master
      #   env:
      #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      #   with:
      #     image: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}
      #     args: --file=Dockerfile

      # - name: Upload result to GitHub Code Scanning
      #   uses: github/codeql-action/upload-sarif@v2
      #   with:
      #     sarif_file: snyk.sarif

      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}